<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baby.babycareproductsshop.order.OrderMapper">
    <insert id="insOrder" useGeneratedKeys="true" keyProperty="iorder">
        INSERT INTO t_order
        SET iuser = #{iuser},
        total_price = #{totalOrderPrice},
        iaddress = #{iaddress}
    </insert>

    <select id="selPaymentOption">
        SELECT ipayment_option, payment_option
        FROM t_payment_option
        WHERE ipayment_option != 1
    </select>

    <select id="selOrderForConfirm">
        SELECT A.iorder, A.total_price AS totalOrderPrice,
        SUM(B.product_cnt) AS totalProductCnt,
        C.nm AS addresseeNm, C.phone_number, C.email
        FROM t_order A
        JOIN t_order_details B
        ON A.iorder = B.iorder
        JOIN t_user C
        ON A.iuser = C.iuser
        AND A.iorder = #{iorder}
        GROUP BY B.iorder
    </select>

    <update id="updOrder">
        UPDATE t_order
        SET iaddress = #{iaddress},
        addressee_nm = #{addresseeNm},
        email = #{email},
        phone_number = #{phoneNumber},
        ipayment_option = #{ipaymentOption},
        process_state = #{processState}
        WHERE (iorder, iuser) = (#{iorder}, #{iuser})
    </update>

    <select id="selConfirmOrder">
        SELECT A.iorder, A.addressee_nm, A.phone_number, A.email, B.zip_code, B.address, B.address_detail,
        C.payment_option, DATE(A.created_at) as createdAt
        FROM t_order A
        JOIN t_address B
        ON A.iaddress = B.iaddress
        JOIN t_payment_option C
        ON A.ipayment_option = C.ipayment_option
        WHERE (A.iuser, A.iorder) = (#{iuser}, #{iorder})
    </select>

    <!-- -->
    <select id="getOrderList">
        SELECT a.iorder, b.iproduct, c.rep_pic repPic,
        a.process_state processStateCode, DATE(a.created_at) createdAt,
        (SELECT price FROM t_product WHERE iproduct = b.iproduct) * b.product_cnt price,
        (SELECT COUNT(*) FROM t_review WHERE ireview = b.idetails) reviewFl
        FROM t_order a
        INNER JOIN t_order_details b
        ON a.iorder = b.iorder
        INNER JOIN t_product c
        ON b.iproduct = c.iproduct
        WHERE a.iuser = #{iuser}
        <if test="date != 0">
            AND a.created_at BETWEEN DATE_ADD(NOW(), INTERVAL
            <if test="date == 1"> -1 DAY </if>
            <if test="date == 2"> -1 WEEK </if>
            <if test="date == 3"> -1 MONTH </if>
            <if test="date == 4"> -90 DAY </if>
            <if test="date == 5"> -180 DAY </if>
                )AND NOW()
        </if>
        <if test="listFl == 1 and processStateCode &gt; 0 and processStateCode &lt;= 4">
            AND process_state = #{processStateCode}
        </if>
        <if test="listFl == 2">
            AND (a.delete_fl = 1 OR b.refund_fl = 1)
        </if>
        GROUP BY a.iorder
        ORDER BY a.created_at DESC
    </select>

    <select id="getProductList">
        SELECT a.iorder, b.idetails, b.iproduct, c.rep_pic repPic, c.product_nm productNm, b.product_cnt productCnt, a.process_state processStateCode,
        (SELECT price FROM t_product WHERE iproduct = b.iproduct) * b.product_cnt price
        <if test="listFl == 1">
            , (SELECT COUNT(*) FROM t_review WHERE ireview = b.idetails) reviewFl
        </if>
        <if test="listFl == 2">
            , if(a.delete_fl = 1, 1, if(b.refund_fl = 1, 2, 0)) orderFl
        </if>
        FROM t_order a
        INNER JOIN t_order_details b
        ON a.iorder = b.iorder
        INNER JOIN t_product c
        ON b.iproduct = c.iproduct
        WHERE a.iuser = #{iuser}
        <if test="listFl == 2">
            AND if(a.delete_fl = 1, 1, if(b.refund_fl = 1, 2, 0))
        </if>
        ORDER BY a.created_at DESC
    </select>

    <update id="orderCancel">
        UPDATE t_order
        SET delete_fl = 1
        WHERE iorder = #{iorder}
    </update>
</mapper>